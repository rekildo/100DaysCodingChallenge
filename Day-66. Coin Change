Coin Change
MediumAccuracy: 43.1%Submissions: 165K+Points: 4
Lamp
Stand out from the crowd. Prepare with Complete Interview Preparation  

Given an integer array coins[ ] of size N representing different denominations of currency and an integer sum, find the number of ways you can make sum by using different combinations from coins[ ].  
Note: Assume that you have an infinite supply of each type of coin. 


Example 1:

Input:
sum = 4 , 
N = 3
coins[] = {1,2,3}
Output: 4
Explanation: Four Possible ways are:
{1,1,1,1},{1,1,2},{2,2},{1,3}.
Example 2:

Input:
Sum = 10 , 
N = 4
coins[] ={2,5,3,6}
Output: 5
Explanation: Five Possible ways are:
{2,2,2,2,2}, {2,2,3,3}, {2,2,6}, {2,3,5} 
and {5,5}.

Your Task:
You don't need to read input or print anything. Your task is to complete the function count() which accepts an array coins[ ] its size N and sum as input parameters and returns the number of ways to make change for given sum of money. 


Expected Time Complexity: O(sum*N)
Expected Auxiliary Space: O(sum)


Constraints:
1 <= sum, N <= 103


//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
     long long int count(int coins[], int N, int sum) {

 

        // code here.

        long long t[N+1][sum+1];

        

        

        for(int i = 0; i<=N; i++)

        {

            for(int j = 0; j<=sum; j++)

            {

                if (i == 0)

                {

                    t[i][j] = 0;

                }

                if ( j== 0)

                {

                    t[i][j] = 1;

                }

            }

        }

        

        for(int i = 1; i<=N; i++)

        {

            for(int j = 1; j<=sum; j++)

            {

                if (coins[i-1] <= j)

                {

                    t[i][j] = t[i][j - coins[i-1]]+t[i-1][j];

                }

                else

                {

                    t[i][j] = t[i-1][j];

                }

            }

        }

        return t[N][sum];

    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int sum, N;
        cin >> sum >> N;
        int coins[N];
        for (int i = 0; i < N; i++) cin >> coins[i];
        Solution ob;
        cout << ob.count(coins, N, sum) << endl;
    }

    return 0;
}


// } Driver Code Ends
