Count the triplets
EasyAccuracy: 25.67%Submissions: 170K+Points: 2
Lamp
Stand out from the crowd. Prepare with Complete Interview Preparation  

Given an array of distinct integers. The task is to count all the triplets such that sum of two elements equals the third element.
 
Example 1:

Input: 
N = 4 
arr[] = {1, 5, 3, 2}
Output: 2 
Explanation: There are 2 triplets:
 1 + 2 = 3 and 3 +2 = 5

Example 2:

Input: 
N = 3
arr[] = {2, 3, 4}
Output: 0
Explanation: No such triplet exits
Your Task:  
You don't need to read input or print anything. Your task is to complete the function countTriplet() which takes the array arr[] and N as inputs and returns the triplet count

Expected Time Complexity: O(N2)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 103
1 ≤ arr[i] ≤ 105



//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;



// } Driver Code Ends
//User function template for C++
class Solution{
public:	
	
	int countTriplet(int arr[], int n) {

        // code here

        sort(arr,arr+n);

       int count = 0;

       for(int i = n-1 ; i>1 ; i--){

           int j = 0 ;

           int k = i-1;

           

           while(j<k){

               if(arr[j]+arr[k]==arr[i]){

                   count++;

                   j++;

                   k++;

               }else if(arr[j]+arr[k]<arr[i]){

                   j++;

               }else{

                   k--;

               }

           }

       }

       return count;

    }
};

//{ Driver Code Starts.


int main() 
{
   	
   	ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cout.tie(NULL);
   
   	int t;
    cin >> t;
    while (t--)
    {
        int n;
        cin >> n;

        int arr[n];
        for(int i = 0; i < n; i++)
        	cin >> arr[i];

        Solution ob;
        cout << ob.countTriplet(arr, n) << "\n";

    }

    return 0;
}
// } Driver Code Ends
