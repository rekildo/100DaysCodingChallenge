Exceptionally odd
BasicAccuracy: 50.53%Submissions: 55829Points: 1
Given an array of N positive integers where all numbers occur even number of times except one number which occurs odd number of times. Find the exceptional number.

Example 1:

Input:
N = 7
Arr[] = {1, 2, 3, 2, 3, 1, 3}
Output: 3
Explaination: 3 occurs three times.


Example 2:

Input:
N = 7
Arr[] = {5, 7, 2, 7, 5, 2, 5}
Output: 5
Explaination: 5 occurs three times.


Your Task:
You don't need to read input or print anything. Your task is to complete the function getOddOccurrence() which takes arr[] and n as input parameters and returns the exceptional number.


Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)


Constraints:
1 ≤ N ≤ 105
1 ≤ arr[i] ≤ 106

 




//Approach 1
//TIME : O(N2)
//SPCE : O(1)
int getOddOccurrence(int arr[], int n){
	
	for(int i = 0; i<n; i++){
		int cnt = 0;
		int num = arr[i];
		for(int j = 0; j<n; j++){
			if(arr[i] == arr[j])
				cnt++;
		}

		if(cnt % 2 != 0)
			return arr[i];
	}
return -1;
}




//APPROACH 2 (using unordered_map)
//TIME : O(N)
//SPACE : O(N)
//{ Driver Code Starts
//Initial template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution{   
public:
    int getOddOccurrence(int arr[], int n){
	
	unordered_map<int,int> m;

	for(int i = 0; i<n; i++){
		m[arr[i]]++;
	}

	// for(int i = 0; i<m.size(); i++)
	for(auto i : m){
		if(i.second % 2 != 0)
			return i.first;
	}
	return -1;
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int arr[n];
        for (int i = 0; i < n; i++) {
            cin >> arr[i];
        }
        Solution ob;
        auto ans = ob.getOddOccurrence(arr, n);
        cout << ans << "\n";
    }
    return 0;
}


// } Driver Code Ends




//APPRAOCH - 3
//TIME : O(N)
//SPACE : O(1)

  int getOddOccurrence(int arr[], int n){
	   int ans = 0;     
	for(int i =0; i<n; i++){
	    ans = ans ^ arr[i];
	}
	return ans;
    }
};

