//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends
class Solution
{
    public:
    //Function to find a continuous sub-array which adds up to a given number.
    vector<int> subarraySum(int a[], int n, long long s)
    {
        vector<int> v;
        // Your code here
        int l = 0, r = 1;
    	int sum = 0;
    	if(n == 1){
    	    if(a[0] == s){
    	        v.push_back(l+1);
    	        v.push_back(l+1);
    	        return v;
    	    }
    	}else if(s == 0){
    	    v.push_back(-1);
    	    return v;
    	}
    	sum = a[l] + a[r];
    	while(r < n){
    
    		if(sum == s){
    			v.push_back(l+1);
    			v.push_back(r+1);
    			return v;
    			break;
    		}else if(sum < s){
    			r++;
    		}else{
    			sum -= a[l];
    			l++;
    			
    			continue;
    		}
    		sum += a[r];
		//loop ends here
	    }
	    v.push_back(-1);
	    return v;
    }
};

//{ Driver Code Starts.

int main()
 {
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        long long s;
        cin>>n>>s;
        int arr[n];
        const int mx = 1e9;
        for(int i=0;i<n;i++)
        {
            cin>>arr[i];
        }
        Solution ob;
        vector<int>res;
        res = ob.subarraySum(arr, n, s);
        
        for(int i = 0;i<res.size();i++)
            cout<<res[i]<<" ";
        cout<<endl;
        
    }
	return 0;
}
// } Driver Code Ends
