Merge Sort
MediumAccuracy: 54.1%Submissions: 111K+Points: 4
Lamp
Don't Miss Out on the Exciting World of Data Science and Unlock Your Full Potential Today. Try this course!

Given an array arr[], its starting position l and its ending position r. Sort the array using merge sort algorithm.
Example 1:

Input:
N = 5
arr[] = {4 1 3 9 7}
Output:
1 3 4 7 9
Example 2:

Input:
N = 10
arr[] = {10 9 8 7 6 5 4 3 2 1}
Output:
1 2 3 4 5 6 7 8 9 10

Your Task:
You don't need to take the input or print anything. Your task is to complete the function merge() which takes arr[], l, m, r as its input parameters and modifies arr[] in-place such that it is sorted from position l to position r, and function mergeSort() which uses merge() to sort the array in ascending order using merge sort algorithm.

Expected Time Complexity: O(nlogn) 
Expected Auxiliary Space: O(n)

Constraints:
1 <= N <= 105
1 <= arr[i] <= 103


//{ Driver Code Starts
#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;



/* Function to print an array */
void printArray(int arr[], int size)
{
    int i;
    for (i=0; i < size; i++)
        printf("%d ", arr[i]);
    printf("\n");
}


// } Driver Code Ends
class Solution
{
     void merge(int arr[], int low, int mid, int high)

    {

        int left = low,right = mid+1,temp[high-low+1],i = 0;

        while(left<=mid and right <=high){

            if(arr[left]<=arr[right]) temp[i++] = arr[left++];

            else temp[i++] = arr[right++];

        }

        while(left<=mid)  temp[i++] = arr[left++];

        while(right<=high) temp[i++] = arr[right++];

        for(i=low;i<=high;i++) arr[i] = temp[i-low];

     }

    public:

    void mergeSort(int arr[], int l, int r)

    {

        if(l==r) return;

        int mid = (l+r)/2;

        mergeSort(arr,l,mid);

        mergeSort(arr,mid+1,r);

        merge(arr,l,mid,r);

    }
};

//{ Driver Code Starts.


int main()
{
    int n,T,i;

    scanf("%d",&T);

    while(T--){
    
    scanf("%d",&n);
    int arr[n+1];
    for(i=0;i<n;i++)
      scanf("%d",&arr[i]);

    Solution ob;
    ob.mergeSort(arr, 0, n-1);
    printArray(arr, n);
    }
    return 0;
}
// } Driver Code Ends
