Reverse words in a given string
EasyAccuracy: 56.08%Submissions: 221K+Points: 2
Lamp
This problem is part of GFG SDE Sheet. Click here to view more.  

Given a String S, reverse the string without reversing its individual words. Words are separated by dots.

Example 1:

Input:
S = i.like.this.program.very.much
Output: much.very.program.this.like.i
Explanation: After reversing the whole
string(not individual words), the input
string becomes
much.very.program.this.like.i
Example 2:

Input:
S = pqr.mno
Output: mno.pqr
Explanation: After reversing the whole
string , the input string becomes
mno.pqr

Your Task:
You dont need to read input or print anything. Complete the function reverseWords() which takes string S as input parameter and returns a string containing the words in reversed order. Each word in the returning string should also be separated by '.' 


Expected Time Complexity: O(|S|)
Expected Auxiliary Space: O(|S|)


Constraints:
1 <= |S| <= 105



//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends

class Solution
{
    public:
    //Function to reverse words in a given string.
    string reverseWords(string S) 

    { 

        // code here 

        int n=S.length();

        string str="";

        int j=n-1;

        int k;

        bool flag=true;

        for(int i=n-1;i>=0;i--){

            if(S[i]=='.'){

                str+=(S.substr(i+1,j-i));

                flag=false;

                str.push_back('.');

                j=i-1;

                k=i;

            }

        }

        if(flag){

            str=S;

        }

        str+=S.substr(0,k);

        return str;

    }  
};

//{ Driver Code Starts.
int main() 
{
    int t;
    cin >> t;
    while (t--) 
    {
        string s;
        cin >> s;
        Solution obj;
        cout<<obj.reverseWords(s)<<endl;
    }
}
// } Driver Code Ends
