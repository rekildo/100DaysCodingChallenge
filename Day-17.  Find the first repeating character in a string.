Repeated Character
BasicAccuracy: 43.15%Submissions: 50697Points: 1
Given a string consisting of lowercase english alphabets. Find the repeated character present first in the string.

Example 1:

Input:
S = "geeksforgeeks"
Output: g
Explanation: g, e, k and s are the repeating
characters. Out of these, g occurs first. 
Example 2:

Input: 
S = "abcde"
Output: -1
Explanation: No repeating character present.

Your Task:
You don't need to read input or print anything. Your task is to complete the function firstRep() which takes the string S as input and returns the the first repeating character in the string. In case there's no repeating character present, return '#'.


Expected Time Complexity: O(|S|).
Expected Auxiliary Space: O(1).


Constraints:
1<=|S|<=105





//SOURCE CODE
//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
  public:
    char firstRep (string s)
    {
        //code here.
       unordered_map<char,int> m;
       for(int i = 0; i<s.size(); i++){
       		m[s[i]]++;
       }
       
       for(int i = 0; i<s.size(); i++){
           if(m[s[i]] > 1)
                return s[i];
       }
    
        return '#';
    }
};

//{ Driver Code Starts.
int main()
{
    int t;
    cin >> t;
    while (t--)
    {
        string s; cin >> s;
        Solution ob;
        char res = ob.firstRep (s);
        if (res == '#') cout << -1 << endl;
        else cout << res << endl;
    }
    return 0;
}



// } Driver Code Ends



//APPROACH - 2
//TIME : O(N2)

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution
{
  public:
    char firstRep (string s)
    {
        //code here.
       for(int i = 0; i<s.size()-1; i++){
           char t = s[i];
           for(int j = i+1; j<s.size(); j++){
               if(t == s[j])
                    return t;
           }
       }
    
        return '#';
    }
};
